# float exp(float base, int power) {
#     float result = 1;
#     for(int i = power; i > 0; i--) {
#         result *= base;
#     }
#
#     return result;
# }

# 16c Assembly
# Memory Map
    # R8 := base
    # R9 := exponent
    # R10 := result
    # R11 := i
    # R12-15 := temp variables

g LBL D # Label start of subroutine
    # Initialize variables
    1   # X <- 1
    STO 10  # R10 := result <- X == 1
    RCL 9   # X <- R9 := exponent
    STO I   # RI <- X := exponent

    g LBL E # Loop top
        RCL 9   # X <- R9 := exponent
        DCZ     # RI--; if RI == 0, exit, else proceed
        GTO 0
        RCL 10  # X <- R10:=result
        RCL 8   # Y <- R10:=result, X <- R8:=base
        *       # X <- X * Y
        STO 10  # R10 <- X := result * base
       
    g LBL 0 # End of loop
    RCL 10  # X <- R10 := result
    f SHOW dec  # Display results
g RTN   # Return