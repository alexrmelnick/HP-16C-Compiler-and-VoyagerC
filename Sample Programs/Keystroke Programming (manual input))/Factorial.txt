This documents the program for computing the factorial of a number on the HP-16C.
Programmed manually by me (Alex Melnick) on 2024-6-11.


My VoyagerC program that I am converting to HP-16C "assembly" language:
uint32 factorial(uint32 n) {
    uint32 result = 1;

    while (n > 1) {
        result = result * n; // Eventually plan to implement *= operator, but not yet
        n = n - 1; // Eventually plan to implement -- and -= operator, but not yet
    }

    return result;
}


My VoyagerC program converted to MIPS assembly (the only assembly language I know):
.data
    input:  .word 5  # The number to compute the factorial of
    output: .word 0 # The result of the factorial computation
    
.text
    lw $t0, input  # Load the number to compute the factorial of into $t0
    li $t1, 1      # Load the number 1 into $t1 - the result of the factorial computation
    li $t2, 1      # Load the number 1 into $t2 - the number to subtract from $t0
    Loop:
        beq $t0, $t2, Done # If $t0 == 1, then we are done
        mul $t1, $t1, $t0 # Multiply $t1 by $t0 and store the result in $t1
        sub $t0, $t0, $t2 # Subtract 1 from $t0 and store the result in $t0
        j Loop # Jump back to the beginning of the loop
    Done:
        sw $t1, output # Store the result of the factorial computation in output


HP-16C "assembly" language program: (not currently working)
g P/R           # Set to Program mode
f CLEAR PRGM    # Clear program memory
g LBL A         # Label this program as "A" (the main program)
    STO 0           # R0 <- Input
    1               # X <- 1
    STO 1           # R1 <- X=1:=Result
    g LBL B         # Label this loop as "B"
        RCL 0           # X <- R0=Input
        g x=0           # If X:=Input == 0, then Go To C, else skip the next line
        GTO C
        RCL 1           # Y <- X:=Input, X <- R1:=Result
        *               # X <- (Y:=Input * X:=Result)
        STO 1           # R1:=Result <- X:=Input*Result
        RCL 0           # X <- R0:=Input
        1 -             # X <- X-1:=Input-1
        STO 0           # R0:=Input <- X:=Input-1
        GTO B           # Goto B
    g LBL C         # Label Done as "C"
    RCL 1           # X <- R1:=Result
#g return       # Return (only necessary if loading multiple programs)
                # result is in R1