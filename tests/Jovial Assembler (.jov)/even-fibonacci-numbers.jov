// Project Euler problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// Answer: 4613732 d

//  int sum = 0
//  int a = 1
//  int b = 2
//  do while(b < 4000000)
//      if(b%2 == 0)
//          sum += b
//      temp = b
//      b = b + a
//      a = temp
//  print sum


// Memory map:
// R0 := sum
// R1 := a
// R2 := b
// Starting conditions: unsigned, 32-bit, dec
lbl a   // Start of program
    // Set starting conditions
    UNSGN
    DEC
    32
    WSIZE

    // Initialize variables
    0   // R0 <- 0 := sum
    sto 0
    1   // R1 <- 1 := a
    sto 1
    2   // R2 <- 2 := b
    sto 2

    lbl 0   // Loop top
        rcl 2   // X <- b
        0       // X <- 3, Y <- b
        B?      // If b[0] == 1, do the next line, else skip it
            gto 1   // goto END IF
        // If X[0] == 0, we are doing this
        rcl 0   // X <- sum, Y <- b
        +       // X <- sum + b
        sto 0   // R0 <- sum + b

        lbl 1   // END IF
        RCL 1   // X <- a
        rcl 2   // X <- b, Y <- a
        +       // X <- a+b
        sto 2   // R2 <- X := b
        lstX    // X <- b_previous, Y <- b_new
        sto 1   // R1 <- X := a

        // Loop condition
        X<>Y    // X <- b
        4000000 // X <- 4000000, Y <- B
        X>Y     // If Y < X (B < 4000000), do the next line, else skip it
            gto 0   // Goto loop top
    
    rcl 0   // print sum
    show dec
    rtn